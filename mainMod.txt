import pandas as pd
import datetime
import importlib
import numpy as np

import read_Stock_Data as rd
importlib.reload(rd)                                                #Reload file to cater for any recent changes in the file

import stock_formulae as frm
importlib.reload(frm) 




def test_run():
    ######Reading Data###################
    df_nse50 = rd.get_list('nse_Top50', 'Symbol')                   #Extract list of Top Nse50 Stcoks
    list_nse50 = df_nse50.index.tolist()                            #Array of Stcok symbols

    df_Stock = rd.get_data(list_nse50[0:20],'2018-03-08',20)        #Extract Data from a given date to past x no of traded days
    df_Stock.index = df_Stock.index.strftime('%d/%m/%Y')            #Formate date to DD/MM/YYYY formate
    
    ######Creating Filter################
    df_filter = (df_Stock[-1:]).T                                   #Transposing the matrix to (rows as stocks and 1st column as last close price) for given date
    df_filter = df_filter.rename(columns={'08/03/2018': 'A~CP-3/8'}) 
    
    df_filter = frm.stockAvg(df_Stock.tail(50),df_filter)                    # 1st Filter of calculating 50 Day Mean by less than 5 percent
    df_filter = df_filter.rename(columns={'Mean': 'B~50DA-5%'})
    df_filter.iloc[:,1:2]  = (df_filter.iloc[:,1:2] * 0.95).round(2)
    
    df_filter = frm.stockAvg(df_Stock.tail(200),df_filter)                   # 2nd Filter of calculating 200 Day Mean by less than 5 percent
    df_filter = df_filter.rename(columns={'Mean': 'C~200DA-5%'}) 
    df_filter.iloc[:,2:3]  = (df_filter.iloc[:,2:3] * 0.95).round(2)
    
    df_filter = frm.stockRet(df_Stock,df_filter,10)                          # 3rd Filter of calculating 10 Day Return
    df_filter = df_filter.rename(columns={'Return': 'D~10DR'}) 
    
    df_filter_temp = frm.modstockRet(df_Stock,1)                             # 4th Filter of calculating Absolute Return of 50 days
    df_filter = frm.stockAvg(df_filter_temp,df_filter) 
    df_filter = df_filter.rename(columns={'Mean': 'E~AR50D'}) 
    
    #####################Setting Criteria#######
    
    ########################Citeria 1###########
    df_filter['A>(B/C) '] = np.where((df_filter['A~CP-3/8'] >= df_filter['B~50DA-5%']) | (df_filter['A~CP-3/8'] >= df_filter['C~200DA-5%']), 1 , 0)
    
    ########################Criteria 2##########
    df_filter['D<-8%'] = np.where(df_filter['D~10DR'] < -0.08, 1 , 0)
    
    ########################Criteria 3##########
    df_filter['E<1.5%'] = np.where(df_filter['E~AR50D'] < 0.015, 1 , 0)    
    print(df_filter)  
    
if __name__ == "__main__":
    test_run()